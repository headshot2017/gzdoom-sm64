name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-release:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release -G "MinGW Makefiles"

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config Release

    - name: Create dist folder with exe and dlls for upload
      run:
        mkdir ${{github.workspace}}/build/dist &&
        mv ${{github.workspace}}/build/libsm64/libsm64.dll ${{github.workspace}}/build/dist/ &&
        mv ${{github.workspace}}/build/*.exe ${{github.workspace}}/build/dist/ &&
        mv ${{github.workspace}}/build/*.pk3 ${{github.workspace}}/build/dist/ &&
        mv ${{github.workspace}}/build/gzdoom.sf2 ${{github.workspace}}/build/dist/ &&
        mv ${{github.workspace}}/windows/openal/lib/*.dll ${{github.workspace}}/build/dist/ &&
        mv ${{github.workspace}}/windows/sndfile/lib/*.dll ${{github.workspace}}/build/dist/ &&
        mv ${{github.workspace}}/windows/mpg123/lib/*.dll ${{github.workspace}}/build/dist/ &&
        mv ${{github.workspace}}/windows/fluidsynth/lib/*.dll ${{github.workspace}}/build/dist/ &&
        mv ${{github.workspace}}/windows/libbz2-1.dll ${{github.workspace}}/build/dist/libbz2-1__.dll &&
        mv ${{github.workspace}}/windows/libjpeg-8.dll ${{github.workspace}}/build/dist/libjpeg-9__.dll &&
        mv ${{github.workspace}}/windows/zlib1.dll ${{github.workspace}}/build/dist/zlib1__.dll

    - name: Use the Upload Artifact GitHub Action
      uses: actions/upload-artifact@v2
      with:
        name: gzdoom-sm64-release
        path: build/dist

  build-debug:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Debug -G "MinGW Makefiles"

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config Debug

    - name: Create dist folder with exe and dlls for upload
      run:
        mkdir ${{github.workspace}}/build/dist &&
        mv ${{github.workspace}}/build/libsm64/libsm64.dll ${{github.workspace}}/build/dist/ &&
        mv ${{github.workspace}}/build/*.exe ${{github.workspace}}/build/dist/ &&
        mv ${{github.workspace}}/build/*.pk3 ${{github.workspace}}/build/dist/ &&
        mv ${{github.workspace}}/build/gzdoom.sf2 ${{github.workspace}}/build/dist/ &&
        mv ${{github.workspace}}/windows/openal/lib/*.dll ${{github.workspace}}/build/dist/ &&
        mv ${{github.workspace}}/windows/sndfile/lib/*.dll ${{github.workspace}}/build/dist/ &&
        mv ${{github.workspace}}/windows/mpg123/lib/*.dll ${{github.workspace}}/build/dist/ &&
        mv ${{github.workspace}}/windows/fluidsynth/lib/*.dll ${{github.workspace}}/build/dist/ &&
        mv ${{github.workspace}}/windows/libbz2-1.dll ${{github.workspace}}/build/dist/libbz2-1__.dll &&
        mv ${{github.workspace}}/windows/libjpeg-8.dll ${{github.workspace}}/build/dist/libjpeg-9__.dll &&
        mv ${{github.workspace}}/windows/zlib1.dll ${{github.workspace}}/build/dist/zlib1__.dll

    - name: Use the Upload Artifact GitHub Action
      uses: actions/upload-artifact@v2
      with:
        name: gzdoom-sm64-debug
        path: build/dist
